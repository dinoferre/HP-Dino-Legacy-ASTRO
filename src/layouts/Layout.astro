---
import MenuItemContainer from "../components/MenuItemContainer.astro";
import MenuItem from "../data/menuItemData";
import MenuItemView from "../components/MenuItemView.astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,700;1,400&display=swap"
      rel="stylesheet"
    />
    <title>{title}</title>
  </head>
  
  <body>
    <MenuItemContainer>
      {
        MenuItem.map(({ title, url }) => (
          <MenuItemView title={title} url={url} />
        ))
      }
    </MenuItemContainer>
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --accent: 124, 58, 237;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      #da62c4 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    background-color: #000;
  }
  body {
    font-family: "Crimson Text", serif;
    font-size: 18px;
    margin: 0;
  }
  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }
</style>

<!-- El código importa componentes y datos necesarios, y utiliza esos componentes
y datos para renderizar elementos de menú en un documento HTML. El título del
documento se establece dinámicamente utilizando la propiedad title obtenida
desde Astro.props. Se utiliza un bucle map para recorrer el arreglo MenuItem
importado. Cada elemento del arreglo se desestructura en las propiedades icon,
title y url, y se pasa al componente MenuItemView utilizando la sintaxis JSX/HTML. 
Autor: Dino Ferré -->